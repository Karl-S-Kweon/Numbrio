/* .App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 98vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
} */

/* .divBox {
  width: 20px;
  height: 20px;
  border-style:solid;
  border-color: black;
  color: red;
} */

.NumbrioDiv {
  width: 100vw;
  height: 90.6vh;
  overflow: hidden;
  
  /* border-style: solid;
  border-color: blue;
  border-width: 1px;
  border-radius: 0%; */

  display: flex;
  flex-direction: column;
  position: absolute;

  margin: 0px;
}

.divHeader {
  width: 100vw;
  height: 7.6vh;

  /* border-style: solid; */
  /* border-color: purple; */
  /* border-width: 1px; */
  border-radius: 4%;
  border-bottom: 1px solid darkgrey;

  /* display: flex;
  flex-direction: column; */
  flex-shrink: 0;

  margin-top: 0%;
}

.divBody {
  width: 100vw;
  height: 69vh;

  /* border-style: solid;
  border-color: red;
  border-width: 1px;
  border-radius: 0%; */

  overflow-y: hidden;
  overflow-x: hidden;
  /* display: "flex";
  flex-direction: "column";
  flex-shrink: 0;
  
  justify-content: "flex-start";
  align-items: "center"; */
}

.divFooter {
  width: 100vw;
  height: 14vh;

  /* border-style: solid;
  border-color: purple;
  border-width: 1px;*/
  border-radius: 3%; 
  border-top: solid 1px darkgrey;
  
  
  /* display: "flex";
  flex-direction: "column"; */
  flex-shrink: 0;
  
  margin-top: 0.5rem;
}

/* 
.keyboard {
  border-style: solid;
  border-color: black;
  border-width: 0px;
} */

.KeyRow {
  /* this box's width/height */
  width: 100%;
  height: 50%;

  /* border line */
  /* border-style: solid;
  border-color: blue;
  border-width: 1px; */

  /* content alignment */
  display: flex;
  justify-content: center;
  align-items: center;

  /* box space control */
  /* padding: '0px'; */
  /* margin: 1px 1px; */ /* this makes scrolling */
}

.keyFont {
  /* background-color: props.pointer[1]; */
  width: 1rem;
  height: 100%;

  /* Border Line */
  /* border-style: "solid";
  border-radius: 28%;
  border-width: 1px;
  border-color: blue; */

  /*  */
  padding: 0px;
  margin: 0px 1px;
  display: flex;

  color: darkgrey;
  font-size: small;
  font-weight: bold;
  justify-content: space-evenly;
  align-items: center;
  text-align: center;

  /*    
  border-style:solid;
  border-color: white;
  border-width: 1px;   
    */

  animation-duration: "0.2s";
  animation-iteration-count: "initial";
}

.blockFont {
  height: 100%;
  width: 100%;

  font-size: x-large;
  font-weight: bold;
  justify-content: center;
  align-items: center;
  text-align: center;

  /*animation-fill-mode: both;*/
  animation-duration: "0.1s";
  animation-iteration-count: "initial";
}

button:focus {
  outline: none;
}

/*  Source
https://stackoverflow.com/questions/50380360/pure-css-zoom-animation-based-on-timer
*/
@-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1);
    transform: scale3d(1.1, 1.1, 1.1);
  }
  15% {
    -webkit-transform: scale3d(1.09, 1.09, 1.09);
    transform: scale3d(1.09, 1.09, 1.09);
  }
  30% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05);
  }
  50% {
    -webkit-transform: scale3d(1.015, 1.015, 1.015);
    transform: scale3d(1.015, 1.015, 1.015);
  }
  to {
    -webkit-transform: scaleX(1);
    transform: scaleX(1);
  }
  to {
    -webkit-transform: scaleX(1);
    transform: scaleX(1);
  }
}

@keyframes pulse {
  0% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1);
    transform: scale3d(1.1, 1.1, 1.1);
  }
  15% {
    -webkit-transform: scale3d(1.09, 1.09, 1.09);
    transform: scale3d(1.09, 1.09, 1.09);
  }
  30% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05);
  }
  50% {
    -webkit-transform: scale3d(1.015, 1.015, 1.015);
    transform: scale3d(1.015, 1.015, 1.015);
  }
  to {
    -webkit-transform: scaleX(1);
    transform: scaleX(1);
  }
}

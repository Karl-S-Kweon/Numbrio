/* .App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 98vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
} */

/* .divBox {
  width: 20px;
  height: 20px;
  border-style:solid;
  border-color: black;
  color: red;
} */

.keyboard {
  border-style:solid;
  border-color: black;
  border-width: 0px;
}

.keyRow {
  width: 100%;
  height: '65px';
  border-Style: 'solid';
  border-Color: 'blue';
  border-radius: 1%;  
  border-width: 1px;  
}

.keyFont {
  display: flex;
  width: 100%;
  height: 100%;
  font-size: large;
  font-weight: bold;
  justify-content: center;
  align-items: center;
/*    
  border-style:solid;
  border-color: white;
  border-width: 1px;   
    */
}

button:focus {outline: none;}


/*  Source
https://stackoverflow.com/questions/50380360/pure-css-zoom-animation-based-on-timer
*/
@-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1);
    transform: scale3d(1.1, 1.1, 1.1)
  }
  15% {
    -webkit-transform: scale3d(1.09, 1.09, 1.09);
    transform: scale3d(1.09, 1.09, 1.09)
  }
  30% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05)
  }
  50% {
    -webkit-transform: scale3d(1.015, 1.015, 1.015);
    transform: scale3d(1.015, 1.015, 1.015)
  }
  to {
    -webkit-transform: scaleX(1);
    transform: scaleX(1)
  }
}

@keyframes pulse {
  0% {
    -webkit-transform: scale3d(1.1, 1.1, 1.1);
    transform: scale3d(1.1, 1.1, 1.1)
  }
  15% {
    -webkit-transform: scale3d(1.09, 1.09, 1.09);
    transform: scale3d(1.09, 1.09, 1.09)
  }
  30% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05)
  }
  50% {
    -webkit-transform: scale3d(1.015, 1.015, 1.015);
    transform: scale3d(1.015, 1.015, 1.015)
  }
  to {
    -webkit-transform: scaleX(1);
    transform: scaleX(1)
  }
}